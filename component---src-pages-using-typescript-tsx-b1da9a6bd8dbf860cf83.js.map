{"version":3,"file":"component---src-pages-using-typescript-tsx-b1da9a6bd8dbf860cf83.js","mappings":"2NAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+ECAX,MA7BeT,IAAmB,IAAlB,SAAEU,GAAUV,GACbW,EAAAA,EAAAA,gBAAe,cAU5B,OACEd,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKe,UAAU,aACbf,EAAAA,cAAA,YAAOa,GACPb,EAAAA,cAAA,UAAQe,UAAU,kDAChBf,EAAAA,cAAA,OAAKe,UAAU,0EAAyE,MACnF,IAAIC,MAAOC,cAAc,KAAU,IACtCjB,EAAAA,cAAA,QAAMe,UAAU,sEAAqE,6BAIvFf,EAAAA,cAAA,OAAKe,UAAU,+DAGlB,C,+CCIP,IAhCA,SAAYZ,GAAoC,IAADe,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAElB,EAAK,SAAEW,GAAUV,EAC3C,MAAM,KAAEK,IAASM,EAAAA,EAAAA,gBAAe,YAY1BO,EAAkBD,GAAeZ,EAAKc,aAAaF,YACnDG,EAAgC,QAApBL,EAAGV,EAAKc,oBAAY,IAAAJ,OAAA,EAAjBA,EAAmBhB,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQuB,EAAe,GAAGrB,OAAWqB,IAAiBrB,GACtDF,EAAAA,cAAA,QAAMwB,KAAK,cAAcC,QAASJ,IAClCrB,EAAAA,cAAA,QAAM0B,SAAS,WAAWD,QAASvB,IACnCF,EAAAA,cAAA,QAAM0B,SAAS,iBAAiBD,QAASJ,IACzCrB,EAAAA,cAAA,QAAM0B,SAAS,UAAUD,QAAQ,YACjCzB,EAAAA,cAAA,QAAMwB,KAAK,eAAeC,QAAQ,YAClCzB,EAAAA,cAAA,QAAMwB,KAAK,kBAAkBC,SAA0B,QAAjBN,EAAAX,EAAKc,oBAAY,IAAAH,OAAA,EAAjBA,EAAmBQ,SAAU,KACnE3B,EAAAA,cAAA,QAAMwB,KAAK,gBAAgBC,QAASvB,IACpCF,EAAAA,cAAA,QAAMwB,KAAK,sBAAsBC,QAASJ,IACzCR,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\";\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\ntype DataProps = {\n  site: {\n    buildTime: string;\n  };\n};\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />;\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div className=\"min-h-svh\">\n        <main>{children}</main>\n        <footer className=\"absolute bottom-0 left-0 right-0 text-center  \">\n          <div className=\" inline-block text-purple  font-bold opacity-100 text-[12px] px-2 py-4\">\n            Â© {new Date().getFullYear()} &middot;{\" \"}\n            <span className=\"bg-gradient-to-r from-purple to-teal bg-clip-text text-transparent\">\n              Christoforos Varakliotis\n            </span>\n          </div>\n          <div className=\"text-center h-[4px] bg-gradient-to-r from-purple to-teal\" />\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","children","useStaticQuery","className","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}