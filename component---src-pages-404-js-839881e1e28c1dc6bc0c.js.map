{"version":3,"file":"component---src-pages-404-js-839881e1e28c1dc6bc0c.js","mappings":"6LA0CA,MA7BeA,IAAmB,IAAlB,SAAEC,GAAUD,GACbE,EAAAA,EAAAA,gBAAe,cAU5B,OACEC,EAAAA,cAAA,QAAMC,UAAU,2BACdD,EAAAA,cAAA,OAAKC,UAAU,sDACZH,GAEHE,EAAAA,cAAA,UAAQC,UAAU,2DAChBD,EAAAA,cAAA,OAAKC,UAAU,+EACbD,EAAAA,cAAA,WAAK,MAAG,IAAIE,MAAOC,cAAc,KAAO,IAAS,IACjDH,EAAAA,cAAA,QAAMC,UAAU,sEAAqE,6BAIvFD,EAAAA,cAAA,OAAKC,UAAU,qEAEZ,C,+CCKX,IAjCA,SAAYJ,GAA2C,IAADO,EAAAC,EAAA,IAAzC,YAAEC,EAAW,MAAEC,EAAK,SAAET,EAAQ,MAAEU,GAAOX,EAClD,MAAM,KAAEY,IAASV,EAAAA,EAAAA,gBAAe,YAY1BW,EAAkBJ,GAAeG,EAAKE,aAAaL,YACnDM,EAAgC,QAApBR,EAAGK,EAAKE,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBG,MAExC,OACEP,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQY,EAAe,GAAGL,OAAWK,IAAiBL,GACtDP,EAAAA,cAAA,QAAMa,KAAK,cAAcC,QAASJ,IAClCV,EAAAA,cAAA,QAAMe,SAAS,WAAWD,QAASP,IACnCP,EAAAA,cAAA,QAAMe,SAAS,iBAAiBD,QAASJ,IACzCV,EAAAA,cAAA,QAAMe,SAAS,UAAUD,QAAQ,YACjCd,EAAAA,cAAA,QAAMa,KAAK,eAAeC,QAAQ,YAClCd,EAAAA,cAAA,QAAMa,KAAK,kBAAkBC,SAA0B,QAAjBT,EAAAI,EAAKE,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBW,SAAU,KACnEhB,EAAAA,cAAA,QAAMa,KAAK,gBAAgBC,QAASP,IACpCP,EAAAA,cAAA,QAAMa,KAAK,sBAAsBC,QAASJ,KACxCF,GAASR,EAAAA,cAAA,QAAMa,KAAK,SAASC,QAAQ,YACtChB,EAGP,C,mGCpCA,MAcamB,EAAOA,IAAMjB,EAAAA,cAACkB,EAAAA,EAAG,CAACX,MAAM,mBAErC,UAhBqBY,IACnBnB,EAAAA,cAACoB,EAAAA,EAAM,KACLpB,EAAAA,cAAA,OAAKC,UAAU,+DACbD,EAAAA,cAAA,MAAIC,UAAU,2GAA0G,OAGxHD,EAAAA,cAAA,OAAKC,UAAU,4BAA2B,aAC1CD,EAAAA,cAAA,OAAKC,UAAU,sDAAqD,4D","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <main className=\"min-h-svh flex flex-col\">\n      <div className=\"flex flex-col grow shrink basis-1/2 h-0 p-2 md:p-4\">\n        {children}\n      </div>\n      <footer className=\"grow-0 shrink-0 flex-col flex items-center print:hidden\">\n        <div className=\"inline-flex gap-1 text-purple font-medium opacity-100 text-[12px] px-2 py-4\">\n          <div>Â© {new Date().getFullYear()} </div>&middot;{\" \"}\n          <span className=\"bg-gradient-to-r from-purple to-teal bg-clip-text text-transparent\">\n            Christoforos Varakliotis\n          </span>\n        </div>\n        <div className=\"text-center h-[4px] bg-gradient-to-r from-purple to-teal w-full\" />\n      </footer>\n    </main>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction Seo({ description, title, children, index }) {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {!index && <meta name=\"robots\" content=\"noindex\" />}\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <div className=\"flex flex-col items-center justify-center gap-4 grow shrink\">\n      <h1 className=\"text-6xl sm:text-8xl font-bold mb-0 bg-gradient-to-tr from-purple to-teal bg-clip-text text-transparent\">\n        404\n      </h1>\n      <div className=\"text-4xl font-extralight\">Not Found</div>\n      <div className=\"text-lg font-extralight text-gray-dark text-center\">\n        You just hit a route that doesn&#39;t exist... the sadness.\n      </div>\n    </div>\n  </Layout>\n);\n\nexport const Head = () => <Seo title=\"404: Not Found\" />;\n\nexport default NotFoundPage;\n"],"names":["_ref","children","useStaticQuery","React","className","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","title","index","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","Seo","NotFoundPage","Layout"],"sourceRoot":""}